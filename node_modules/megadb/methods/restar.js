const { is_num, is_float, saveJSON } = require("../utils/utilidades.js"),
				errorDB = require("../class/errorDB.js");

module.exports = {
	restar: function(clave, number, split_object, global_object, self, save) {

	  if(!number && number != 0) throw new errorDB(`Necesitas colocar el valor(numero)`, 'NUMERO INVALIDO', 'restar', clave, number)
	  if(!is_num(number)) throw new errorDB(`El valor debe ser un numero`, 'NUMERO INVALIDO', 'restar', clave, number)
	  number = is_float(number) ? parseFloat(number) : parseInt(number)

	  var [...args] = clave.split(split_object)
	  var object_data = global_object[self.object_id]

		for(var key of args) {
			if(!object_data.hasOwnProperty(key)) return Promise.reject(new errorDB(`No se encontro la propiedad ${key}, base de datos: ${self.database_name}`, 'PROPIEDAD NO EXISTENTE', 'restar', clave, number))
			if(key == args[args.length-1]) {
				if(!is_num(object_data[key])) return Promise.reject(new errorDB(`El valor de la propiedad ${key} no es un numero, base de datos: ${self.database_name}`, 'NUMERO NO EXISTENTE', 'restar', clave, number))
				object_data[key] = (is_float(object_data[key]) ? parseFloat(object_data[key]) : parseInt(object_data[key])) - number
				if(!save) return Promise.resolve(object_data[key])
				saveJSON(self, global_object[self.object_id])
				return Promise.resolve(object_data[key])
			}
			else {
				object_data = object_data[key]
			}
		}
	}
}