const { readJSON } = require("../utils/utilidades.js"),
			fs = require("graceful-fs"),
			errorDB = require("../class/errorDB.js");

module.exports = {
	convert_megadtbs: function(self) {
	  if(self.database_name != "mega_db") throw new errorDB(`El nombre de la base de datos del constructor crearDB debe ser "mega_db"`, 'NOMBRE INVALIDO', 'convert_megadtbs', self.database_name)
	  if(!fs.existsSync(`${self.path_main_carpet}/mega_db.json`)) throw new errorDB(`No se encontro el archivo mega_db.json en ${self.path_main_carpet}`, 'DATABASE INVALIDO', 'convert_megadtbs', self.database_name)
	  let mega_dtbs = readJSON(self.path_file_name)
	  let successful_databases = []
	  let invalid_databases = []
	  if(Object.keys(mega_dtbs).length <= 0) throw new errorDB(`El archivo ${self.database_name} no contiene ninguna base de datos`, 'ARCHIVO INVALIDO', 'convert_megadtbs', self.database_name)
	  for(var key in mega_dtbs) {
	    if(!mega_dtbs[key].hasOwnProperty("value")) throw new errorDB(`El archivo ${self.database_name} no contiene la estructura de la base de datos mega-dtbs`, 'ARCHIVO INVALIDO', 'convert_megadtbs', self.database_name)
	    if(!fs.existsSync(`${self.path_main_carpet}/${key}.json`)) {
	      fs.writeFileSync(`${self.path_main_carpet}/${key}.json`, JSON.stringify(mega_dtbs[key].value, null, 2), { flag: 'wx' }, function(err) {
	        if(err) throw new errorDB(`No se pudo crear la base de datos ${database_name}, error: ${err}`, 'CREACION INVALIDA', 'convert_megadtbs', self.database_name)
	      });

	      successful_databases.push(`${key}.json`)
	      continue
	    }
	    invalid_databases.push(`${key}`)
	  }
	  console.log(`[ADAPTACION FINALIZADA]`)
	  console.log(`[DATABASES ADAPTADAS CORRECTAMENTE] ${successful_databases.length > 0 ? successful_databases.join(" | ") : "Ninguno"}`)
	  console.log(`[DATABASES ERRONEAS] ${invalid_databases.length > 0 ? invalid_databases.join(" | ") : "Ninguno"}`)	  
	}
}