const { isObject } = require("../utils/utilidades.js"),
				errorDB = require("../class/errorDB.js");

function randomArray(object, cantidad) {
	let array = []
	let keys =  Object.keys(object)

	for (var i = 0; i < cantidad; i++) {
		if(i >= keys.length) break
		var random_number = parseInt((Math.random() * keys.length));
		do {
			var existente = array.indexOf(keys[random_number]);
			if(existente >= 0) {
				random_number = parseInt((Math.random() * keys.length));
			}
			else {
				array.push(keys[random_number]);
				existente = -2;
			}
		}
		while(existente > -1);
	}
	return array.map(o => new Object({clave: o, valor: object[o]}))
}

module.exports = {
	random: function (clave, cantidad, split_object, global_object, self) {
	  if(clave === false)	return Promise.resolve(randomArray(global_object[self.object_id], cantidad))
	  
	  var [...args] = clave.split(split_object)
	  var object_data = global_object[self.object_id]

		for(var key of args) {
			if(!object_data.hasOwnProperty(key)) return Promise.reject(new errorDB(`No se encontro la propiedad ${key}, base de datos: ${self.database_name}`, 'PROPIEDAD NO EXISTENTE', 'random', clave, cantidad))
			if(key == args[args.length-1]) {
				if(!isObject(object_data[key])) return Promise.reject(new errorDB(`El valor de la propiedad ${key} no es un objeto, base de datos: ${self.database_name}`, 'OBJETO NO EXISTENTE', 'random', clave, cantidad))
				return Promise.resolve(randomArray(object_data[key], cantidad))
			}
			else {
				object_data = object_data[key]
			}
		}
	}
}