const { check_path_object } = require("../utils/utilidades.js"),
				errorDB = require("../class/errorDB.js");


module.exports = {
	filter: function (clave, callback, split_object, global_object, self) {

	  let filter_array = {}

	  if(clave === false) {
	    for(var key in global_object[self.object_id]) {
	      if(callback(global_object[self.object_id][key], key)) filter_array[key] = global_object[self.object_id][key]
	    }
			return Promise.resolve(Object.keys(filter_array).length <= 0 ? {} : filter_array)
	  }
	  check_path_object(clave, split_object, 'filter', callback)

	  var [...args] = clave.split(split_object)
		var object_data = global_object[self.object_id]
		
	  for(var key of args) {
			if(!object_data.hasOwnProperty(key)) return Promise.reject(new errorDB(`No se encontro la propiedad ${key}, base de datos: ${self.database_name}`, 'PROPIEDAD NO EXISTENTE', 'filter', clave, callback))
			if(key == args[args.length-1]) {
				for(var key2 in object_data[key]) {
					if(callback(object_data[key][key2], key2)) filter_array[key2] = object_data[key][key2]
				}
				return Promise.resolve(Object.keys(filter_array).length <= 0 ? {} : filter_array)
			}
			else {
				object_data = object_data[key]
			}
	  }
	}
}
