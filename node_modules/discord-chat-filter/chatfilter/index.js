const Discord = require('discord.js')
const { EventEmitter } = require('events')


/**
 * @typedef ChatFilterClientOptions
 * @property {string} content The content of the message.
 * @property {number} sentTimestamp The timestamp the message was sent.
 */

class ChatFilter {


    constructor(message) {

        /**
        * @type {ChatFilterClientOptions}
        */

        this.message = message

    }

    filterWord(_content) {

        try {
            if (!_content.isArray()) {
                if (this.message.toLowerCase().includes(_content).toLowerCase()) {
                    return true
                }
            } else if (_content.isArray()) {
                for (var i in _content) {
                    if (this.message.toLowerCase().includes(_content[i].toLowerCase())) {
                        return true
                    }
                }
            } else return false
        }
        catch (e) {
            console.error(e)
        }

    }

    filterLink() {

        const { domains } = require('./list.mths.json')

        try {
            for (var i in domains) {
                if (this.message.toLowerCase().includes(domains[i].toLocaleLowerCase()) || this.message.startsWith('https://' || 'http://' || 'www.')) {
                    return true
                }
            }
        } catch (e) {
            console.error(e)
        }

    }

    filterMention() {

        const { mentions } = require('../list.mths.json')

        try {

            for (var i in mentions) {
                if (this.message.toLocaleLowerCase().includes(mentions[i].toLocaleLowerCase())) {
                    return true
                }
            }

        } catch (e) {
            console.error(e)
        }

    }

    filterCaps() {

        try {
            var strings = this.message;
            var i = 0;
            var character = '';
            while (i <= strings.length) {
                character = strings.charAt(i);
                if (isNaN(character * 1)) {
                    if (character == character.toUpperCase() || this.message === this.message.toUpperCase()) {
                        return true
                    }
                }
                i++;
            }

        } catch (e) {
            console.error(e)
        }

    }

}

module.exports.ChatFilter = ChatFilter